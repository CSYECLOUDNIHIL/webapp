name: hello-world
on: push
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      TEST_COMMAND: "npm test"
      DB_DIALECT: "${{ secrets.DB_DIALECT }}"
      DB_HOST: "${{ secrets.DB_HOST }}"
      DB_PORT: "${{ secrets.DB_PORT }}"
      DB_USERNAME: "${{ secrets.DB_USERNAME }}"
      DB_PASSWORD: "${{ secrets.DB_PASSWORD }}"
      DB_NAME_CREATED: "${{ secrets.DB_NAME_CREATED }}"
      DB_NAME_DEFAULT: "${{ secrets.DB_NAME_DEFAULT }}"
      DB_LOGGING: "${{ secrets.DB_LOGGING }}"
      CSV_LOCATION: "${{ secrets.CSV_LOCATION }}"
      SERVER_PORT: "${{ secrets.SERVER_PORT }}"
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: "${{ secrets.DB_USERNAME }}"
          POSTGRES_PASSWORD: "${{ secrets.DB_PASSWORD }}"
          POSTGRES_DB: "${{ secrets.DB_NAME_DEFAULT }}"
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: v18.17.1
      - name: install the dependencies
        run: npm install


      - name: Create .env file
        run: touch .env

      - name: Save .env file
        run: |
          echo "DB_DIALECT=postgres" >> .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_USERNAME=postgres" >> .env
          echo "DB_PASSWORD=Assasinscreed2!" >> .env
          echo "DB_NAME_CREATED=healthz" >> .env
          echo "DB_NAME_DEFAULT=postgres" >> .env
          echo "DB_LOGGING=false" >> .env
          echo "CSV_LOCATION=./opt/users.csv" >> .env
          echo "SERVER_PORT=3001" >> .env
      - name: checking .env file
        run: cat .env
      - name: run the integration
        run: |
          source .env 
          npm test